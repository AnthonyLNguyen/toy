Grammar

    0 $accept: Program $end

    1 Program: DeclPlus

    2 DeclPlus: Decl DeclPlus
    3         | Decl

    4 Decl: VariableDecl
    5     | FunctionDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VariableDecl: Variable _semicolon

    9 Variable: Type _id
   10         | _id _id

   11 Type: _int
   12     | _double
   13     | _boolean
   14     | _string
   15     | Type _leftbracket _rightbracket
   16     | _id _leftbracket _rightbracket

   17 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock
   18             | _void _id _leftparen Formals _rightparen StmtBlock
   19             | _id _id _leftparen Formals _rightparen StmtBlock

   20 Formals: VariablePlusComma
   21        | %empty

   22 VariablePlusComma: Variable _comma VariablePlusComma
   23                  | Variable

   24 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar _rightbrace

   25 ClassDeclOptional: _extends _id
   26                  | _implements IdPlusComma
   27                  | _extends _id _implements IdPlusComma
   28                  | %empty

   29 IdPlusComma: _id _comma IdPlusComma
   30            | _id

   31 FieldStar: Field FieldStar
   32          | %empty

   33 Field: VariableDecl
   34      | FunctionDecl

   35 InterfaceDecl: _interface _id _leftbrace PrototypeStar _rightbrace

   36 PrototypeStar: Prototype PrototypeStar
   37              | %empty

   38 Prototype: Type _id _leftparen Formals _rightparen _semicolon
   39          | _void _id _leftparen Formals _rightparen _semicolon
   40          | _id _id _leftparen Formals _rightparen _semicolon

   41 StmtBlock: _leftbrace _rightbrace
   42          | _leftbrace VariableDeclStar _rightbrace
   43          | _leftbrace StmtStar _rightbrace
   44          | _leftbrace VariableDeclStar StmtStar _rightbrace

   45 VariableDeclStar: VariableDecl
   46                 | VariableDeclStar VariableDecl

   47 StmtStar: Stmt
   48         | StmtStar Stmt

   49 Stmt: ExprOptional _semicolon
   50     | IfStmt
   51     | WhileStmt
   52     | ForStmt
   53     | BreakStmt
   54     | ReturnStmt
   55     | PrintStmt
   56     | StmtBlock

   57 ExprOptional: Expr
   58             | %empty

   59 IfStmt: _if _leftparen Expr _rightparen Stmt
   60       | _if _leftparen Expr _rightparen Stmt _else Stmt

   61 WhileStmt: _while _leftparen Expr _rightparen Stmt

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

   63 BreakStmt: _break _semicolon

   64 ReturnStmt: _return ExprOptional _semicolon

   65 PrintStmt: _println _leftparen ExprPlusComma _rightparen _semicolon

   66 ExprPlusComma: Expr _comma ExprPlusComma
   67              | Expr

   68 Expr: Lvalue _assignop Expr
   69     | _id _assignop Expr
   70     | Constant
   71     | Lvalue
   72     | _id
   73     | Call
   74     | _leftparen Expr _rightparen
   75     | Expr _plus Expr
   76     | Expr _minus Expr
   77     | Expr _multiplication Expr
   78     | Expr _division Expr
   79     | Expr _mod Expr
   80     | _minus Expr
   81     | Expr _less Expr
   82     | Expr _lessequal Expr
   83     | Expr _greater Expr
   84     | Expr _greaterequal Expr
   85     | Expr _equal Expr
   86     | Expr _notequal Expr
   87     | Expr _and Expr
   88     | Expr _or Expr
   89     | _not Expr
   90     | _readln _leftparen _rightparen
   91     | _new _leftparen _id _rightparen
   92     | _newarray _leftparen _intconstant _comma Type _rightparen
   93     | _newarray _leftparen _intconstant _comma _id _rightparen

   94 Lvalue: _id _leftbracket Expr _rightbracket
   95       | _id _period _id
   96       | Lvalue _leftbracket Expr _rightbracket
   97       | Lvalue _period _id

   98 Call: _id _leftparen Actuals _rightparen
   99     | _id _period _id _leftparen Actuals _rightparen

  100 Actuals: ExprPlusComma
  101        | %empty

  102 Constant: _intconstant
  103         | _doubleconstant
  104         | _stringconstant
  105         | _booleanconstant
  106         | _null


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 13
_break (259) 63
_class (260) 24
_double (261) 12
_else (262) 60
_extends (263) 25 27
_for (264) 62
_if (265) 59 60
_implements (266) 26 27
_int (267) 11
_interface (268) 35
_new (269) 91
_newarray (270) 92 93
_null (271) 106
_println (272) 65
_readln (273) 90
_return (274) 64
_string (275) 14
_void (276) 18 39
_while (277) 61
_plus (278) 75
_minus (279) 76 80
_multiplication (280) 77
_division (281) 78
_mod (282) 79
_less (283) 81
_lessequal (284) 82
_greater (285) 83
_greaterequal (286) 84
_equal (287) 85
_notequal (288) 86
_and (289) 87
_or (290) 88
_not (291) 89
_assignop (292) 68 69
_semicolon (293) 8 38 39 40 49 62 63 64 65
_comma (294) 22 29 66 92 93
_period (295) 95 97 99
_leftparen (296) 17 18 19 38 39 40 59 60 61 62 65 74 90 91 92 93 98
    99
_rightparen (297) 17 18 19 38 39 40 59 60 61 62 65 74 90 91 92 93 98
    99
_leftbracket (298) 15 16 94 96
_rightbracket (299) 15 16 94 96
_leftbrace (300) 24 35 41 42 43 44
_rightbrace (301) 24 35 41 42 43 44
_intconstant (302) 92 93 102
_doubleconstant (303) 103
_stringconstant (304) 104
_booleanconstant (305) 105
_id (306) 9 10 16 17 18 19 24 25 27 29 30 35 38 39 40 69 72 91 93 94
    95 97 98 99
IFX (307)
_uminus (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
DeclPlus (56)
    on left: 2 3, on right: 1 2
Decl (57)
    on left: 4 5 6 7, on right: 2 3
VariableDecl (58)
    on left: 8, on right: 4 33 45 46
Variable (59)
    on left: 9 10, on right: 8 22 23
Type (60)
    on left: 11 12 13 14 15 16, on right: 9 15 17 38 92
FunctionDecl (61)
    on left: 17 18 19, on right: 5 34
Formals (62)
    on left: 20 21, on right: 17 18 19 38 39 40
VariablePlusComma (63)
    on left: 22 23, on right: 20 22
ClassDecl (64)
    on left: 24, on right: 6
ClassDeclOptional (65)
    on left: 25 26 27 28, on right: 24
IdPlusComma (66)
    on left: 29 30, on right: 26 27 29
FieldStar (67)
    on left: 31 32, on right: 24 31
Field (68)
    on left: 33 34, on right: 31
InterfaceDecl (69)
    on left: 35, on right: 7
PrototypeStar (70)
    on left: 36 37, on right: 35 36
Prototype (71)
    on left: 38 39 40, on right: 36
StmtBlock (72)
    on left: 41 42 43 44, on right: 17 18 19 56
VariableDeclStar (73)
    on left: 45 46, on right: 42 44 46
StmtStar (74)
    on left: 47 48, on right: 43 44 48
Stmt (75)
    on left: 49 50 51 52 53 54 55 56, on right: 47 48 59 60 61 62
ExprOptional (76)
    on left: 57 58, on right: 49 62 64
IfStmt (77)
    on left: 59 60, on right: 50
WhileStmt (78)
    on left: 61, on right: 51
ForStmt (79)
    on left: 62, on right: 52
BreakStmt (80)
    on left: 63, on right: 53
ReturnStmt (81)
    on left: 64, on right: 54
PrintStmt (82)
    on left: 65, on right: 55
ExprPlusComma (83)
    on left: 66 67, on right: 65 66 100
Expr (84)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92 93, on right: 57 59 60 61 62 66 67 68 69 74
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 94 96
Lvalue (85)
    on left: 94 95 96 97, on right: 68 71 96 97
Call (86)
    on left: 98 99, on right: 73
Actuals (87)
    on left: 100 101, on right: 98 99
Constant (88)
    on left: 102 103 104 105 106, on right: 70


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Program        go to state 9
    DeclPlus       go to state 10
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 1

   13 Type: _boolean .

    $default  reduce using rule 13 (Type)


State 2

   24 ClassDecl: _class . _id ClassDeclOptional _leftbrace FieldStar _rightbrace

    _id  shift, and go to state 18


State 3

   12 Type: _double .

    $default  reduce using rule 12 (Type)


State 4

   11 Type: _int .

    $default  reduce using rule 11 (Type)


State 5

   35 InterfaceDecl: _interface . _id _leftbrace PrototypeStar _rightbrace

    _id  shift, and go to state 19


State 6

   14 Type: _string .

    $default  reduce using rule 14 (Type)


State 7

   18 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock

    _id  shift, and go to state 20


State 8

   10 Variable: _id . _id
   16 Type: _id . _leftbracket _rightbracket
   19 FunctionDecl: _id . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 22


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 23


State 10

    1 Program: DeclPlus .

    $default  reduce using rule 1 (Program)


State 11

    2 DeclPlus: Decl . DeclPlus
    3         | Decl .

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 3 (DeclPlus)

    DeclPlus       go to state 24
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 12

    4 Decl: VariableDecl .

    $default  reduce using rule 4 (Decl)


State 13

    8 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 25


State 14

    9 Variable: Type . _id
   15 Type: Type . _leftbracket _rightbracket
   17 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 26
    _id           shift, and go to state 27


State 15

    5 Decl: FunctionDecl .

    $default  reduce using rule 5 (Decl)


State 16

    6 Decl: ClassDecl .

    $default  reduce using rule 6 (Decl)


State 17

    7 Decl: InterfaceDecl .

    $default  reduce using rule 7 (Decl)


State 18

   24 ClassDecl: _class _id . ClassDeclOptional _leftbrace FieldStar _rightbrace

    _extends     shift, and go to state 28
    _implements  shift, and go to state 29

    $default  reduce using rule 28 (ClassDeclOptional)

    ClassDeclOptional  go to state 30


State 19

   35 InterfaceDecl: _interface _id . _leftbrace PrototypeStar _rightbrace

    _leftbrace  shift, and go to state 31


State 20

   18 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 32


State 21

   16 Type: _id _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 33


State 22

   10 Variable: _id _id .
   19 FunctionDecl: _id _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 34

    $default  reduce using rule 10 (Variable)


State 23

    0 $accept: Program $end .

    $default  accept


State 24

    2 DeclPlus: Decl DeclPlus .

    $default  reduce using rule 2 (DeclPlus)


State 25

    8 VariableDecl: Variable _semicolon .

    $default  reduce using rule 8 (VariableDecl)


State 26

   15 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 35


State 27

    9 Variable: Type _id .
   17 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 36

    $default  reduce using rule 9 (Variable)


State 28

   25 ClassDeclOptional: _extends . _id
   27                  | _extends . _id _implements IdPlusComma

    _id  shift, and go to state 37


State 29

   26 ClassDeclOptional: _implements . IdPlusComma

    _id  shift, and go to state 38

    IdPlusComma  go to state 39


State 30

   24 ClassDecl: _class _id ClassDeclOptional . _leftbrace FieldStar _rightbrace

    _leftbrace  shift, and go to state 40


State 31

   35 InterfaceDecl: _interface _id _leftbrace . PrototypeStar _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 41
    _id       shift, and go to state 42

    $default  reduce using rule 37 (PrototypeStar)

    Type           go to state 43
    PrototypeStar  go to state 44
    Prototype      go to state 45


State 32

   18 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 49
    VariablePlusComma  go to state 50


State 33

   16 Type: _id _leftbracket _rightbracket .

    $default  reduce using rule 16 (Type)


State 34

   19 FunctionDecl: _id _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 51
    VariablePlusComma  go to state 50


State 35

   15 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 15 (Type)


State 36

   17 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 52
    VariablePlusComma  go to state 50


State 37

   25 ClassDeclOptional: _extends _id .
   27                  | _extends _id . _implements IdPlusComma

    _implements  shift, and go to state 53

    $default  reduce using rule 25 (ClassDeclOptional)


State 38

   29 IdPlusComma: _id . _comma IdPlusComma
   30            | _id .

    _comma  shift, and go to state 54

    $default  reduce using rule 30 (IdPlusComma)


State 39

   26 ClassDeclOptional: _implements IdPlusComma .

    $default  reduce using rule 26 (ClassDeclOptional)


State 40

   24 ClassDecl: _class _id ClassDeclOptional _leftbrace . FieldStar _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 32 (FieldStar)

    VariableDecl  go to state 55
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 56
    FieldStar     go to state 57
    Field         go to state 58


State 41

   39 Prototype: _void . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 59


State 42

   16 Type: _id . _leftbracket _rightbracket
   40 Prototype: _id . _id _leftparen Formals _rightparen _semicolon

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 60


State 43

   15 Type: Type . _leftbracket _rightbracket
   38 Prototype: Type . _id _leftparen Formals _rightparen _semicolon

    _leftbracket  shift, and go to state 26
    _id           shift, and go to state 61


State 44

   35 InterfaceDecl: _interface _id _leftbrace PrototypeStar . _rightbrace

    _rightbrace  shift, and go to state 62


State 45

   36 PrototypeStar: Prototype . PrototypeStar

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 41
    _id       shift, and go to state 42

    $default  reduce using rule 37 (PrototypeStar)

    Type           go to state 43
    PrototypeStar  go to state 63
    Prototype      go to state 45


State 46

   10 Variable: _id . _id
   16 Type: _id . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 64


State 47

   22 VariablePlusComma: Variable . _comma VariablePlusComma
   23                  | Variable .

    _comma  shift, and go to state 65

    $default  reduce using rule 23 (VariablePlusComma)


State 48

    9 Variable: Type . _id
   15 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 26
    _id           shift, and go to state 66


State 49

   18 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 67


State 50

   20 Formals: VariablePlusComma .

    $default  reduce using rule 20 (Formals)


State 51

   19 FunctionDecl: _id _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 68


State 52

   17 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 69


State 53

   27 ClassDeclOptional: _extends _id _implements . IdPlusComma

    _id  shift, and go to state 38

    IdPlusComma  go to state 70


State 54

   29 IdPlusComma: _id _comma . IdPlusComma

    _id  shift, and go to state 38

    IdPlusComma  go to state 71


State 55

   33 Field: VariableDecl .

    $default  reduce using rule 33 (Field)


State 56

   34 Field: FunctionDecl .

    $default  reduce using rule 34 (Field)


State 57

   24 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar . _rightbrace

    _rightbrace  shift, and go to state 72


State 58

   31 FieldStar: Field . FieldStar

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 32 (FieldStar)

    VariableDecl  go to state 55
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 56
    FieldStar     go to state 73
    Field         go to state 58


State 59

   39 Prototype: _void _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 74


State 60

   40 Prototype: _id _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 75


State 61

   38 Prototype: Type _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 76


State 62

   35 InterfaceDecl: _interface _id _leftbrace PrototypeStar _rightbrace .

    $default  reduce using rule 35 (InterfaceDecl)


State 63

   36 PrototypeStar: Prototype PrototypeStar .

    $default  reduce using rule 36 (PrototypeStar)


State 64

   10 Variable: _id _id .

    $default  reduce using rule 10 (Variable)


State 65

   22 VariablePlusComma: Variable _comma . VariablePlusComma

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    Variable           go to state 47
    Type               go to state 48
    VariablePlusComma  go to state 77


State 66

    9 Variable: Type _id .

    $default  reduce using rule 9 (Variable)


State 67

   18 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 78

    StmtBlock  go to state 79


State 68

   19 FunctionDecl: _id _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 78

    StmtBlock  go to state 80


State 69

   17 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 78

    StmtBlock  go to state 81


State 70

   27 ClassDeclOptional: _extends _id _implements IdPlusComma .

    $default  reduce using rule 27 (ClassDeclOptional)


State 71

   29 IdPlusComma: _id _comma IdPlusComma .

    $default  reduce using rule 29 (IdPlusComma)


State 72

   24 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar _rightbrace .

    $default  reduce using rule 24 (ClassDecl)


State 73

   31 FieldStar: Field FieldStar .

    $default  reduce using rule 31 (FieldStar)


State 74

   39 Prototype: _void _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 82
    VariablePlusComma  go to state 50


State 75

   40 Prototype: _id _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 83
    VariablePlusComma  go to state 50


State 76

   38 Prototype: Type _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    $default  reduce using rule 21 (Formals)

    Variable           go to state 47
    Type               go to state 48
    Formals            go to state 84
    VariablePlusComma  go to state 50


State 77

   22 VariablePlusComma: Variable _comma VariablePlusComma .

    $default  reduce using rule 22 (VariablePlusComma)


State 78

   41 StmtBlock: _leftbrace . _rightbrace
   42          | _leftbrace . VariableDeclStar _rightbrace
   43          | _leftbrace . StmtStar _rightbrace
   44          | _leftbrace . VariableDeclStar StmtStar _rightbrace

    _boolean          shift, and go to state 1
    _break            shift, and go to state 85
    _double           shift, and go to state 3
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _int              shift, and go to state 4
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _string           shift, and go to state 6
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _rightbrace       shift, and go to state 98
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 103

    $default  reduce using rule 58 (ExprOptional)

    VariableDecl      go to state 104
    Variable          go to state 13
    Type              go to state 48
    StmtBlock         go to state 105
    VariableDeclStar  go to state 106
    StmtStar          go to state 107
    Stmt              go to state 108
    ExprOptional      go to state 109
    IfStmt            go to state 110
    WhileStmt         go to state 111
    ForStmt           go to state 112
    BreakStmt         go to state 113
    ReturnStmt        go to state 114
    PrintStmt         go to state 115
    Expr              go to state 116
    Lvalue            go to state 117
    Call              go to state 118
    Constant          go to state 119


State 79

   18 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 18 (FunctionDecl)


State 80

   19 FunctionDecl: _id _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 19 (FunctionDecl)


State 81

   17 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 17 (FunctionDecl)


State 82

   39 Prototype: _void _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 120


State 83

   40 Prototype: _id _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 121


State 84

   38 Prototype: Type _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 122


State 85

   63 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 123


State 86

   62 ForStmt: _for . _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _leftparen  shift, and go to state 124


State 87

   59 IfStmt: _if . _leftparen Expr _rightparen Stmt
   60       | _if . _leftparen Expr _rightparen Stmt _else Stmt

    _leftparen  shift, and go to state 125


State 88

   91 Expr: _new . _leftparen _id _rightparen

    _leftparen  shift, and go to state 126


State 89

   92 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen
   93     | _newarray . _leftparen _intconstant _comma _id _rightparen

    _leftparen  shift, and go to state 127


State 90

  106 Constant: _null .

    $default  reduce using rule 106 (Constant)


State 91

   65 PrintStmt: _println . _leftparen ExprPlusComma _rightparen _semicolon

    _leftparen  shift, and go to state 128


State 92

   90 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 129


State 93

   64 ReturnStmt: _return . ExprOptional _semicolon

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    ExprOptional  go to state 131
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 94

   61 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 132


State 95

   80 Expr: _minus . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 133
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 96

   89 Expr: _not . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 134
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 97

   74 Expr: _leftparen . Expr _rightparen

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 135
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 98

   41 StmtBlock: _leftbrace _rightbrace .

    $default  reduce using rule 41 (StmtBlock)


State 99

  102 Constant: _intconstant .

    $default  reduce using rule 102 (Constant)


State 100

  103 Constant: _doubleconstant .

    $default  reduce using rule 103 (Constant)


State 101

  104 Constant: _stringconstant .

    $default  reduce using rule 104 (Constant)


State 102

  105 Constant: _booleanconstant .

    $default  reduce using rule 105 (Constant)


State 103

   10 Variable: _id . _id
   16 Type: _id . _leftbracket _rightbracket
   69 Expr: _id . _assignop Expr
   72     | _id .
   94 Lvalue: _id . _leftbracket Expr _rightbracket
   95       | _id . _period _id
   98 Call: _id . _leftparen Actuals _rightparen
   99     | _id . _period _id _leftparen Actuals _rightparen

    _assignop     shift, and go to state 136
    _period       shift, and go to state 137
    _leftparen    shift, and go to state 138
    _leftbracket  shift, and go to state 139
    _id           shift, and go to state 64

    $default  reduce using rule 72 (Expr)


State 104

   45 VariableDeclStar: VariableDecl .

    $default  reduce using rule 45 (VariableDeclStar)


State 105

   56 Stmt: StmtBlock .

    $default  reduce using rule 56 (Stmt)


State 106

   42 StmtBlock: _leftbrace VariableDeclStar . _rightbrace
   44          | _leftbrace VariableDeclStar . StmtStar _rightbrace
   46 VariableDeclStar: VariableDeclStar . VariableDecl

    _boolean          shift, and go to state 1
    _break            shift, and go to state 85
    _double           shift, and go to state 3
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _int              shift, and go to state 4
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _string           shift, and go to state 6
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _rightbrace       shift, and go to state 140
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 103

    $default  reduce using rule 58 (ExprOptional)

    VariableDecl  go to state 141
    Variable      go to state 13
    Type          go to state 48
    StmtBlock     go to state 105
    StmtStar      go to state 142
    Stmt          go to state 108
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 107

   43 StmtBlock: _leftbrace StmtStar . _rightbrace
   48 StmtStar: StmtStar . Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _rightbrace       shift, and go to state 143
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 144
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 108

   47 StmtStar: Stmt .

    $default  reduce using rule 47 (StmtStar)


State 109

   49 Stmt: ExprOptional . _semicolon

    _semicolon  shift, and go to state 145


State 110

   50 Stmt: IfStmt .

    $default  reduce using rule 50 (Stmt)


State 111

   51 Stmt: WhileStmt .

    $default  reduce using rule 51 (Stmt)


State 112

   52 Stmt: ForStmt .

    $default  reduce using rule 52 (Stmt)


State 113

   53 Stmt: BreakStmt .

    $default  reduce using rule 53 (Stmt)


State 114

   54 Stmt: ReturnStmt .

    $default  reduce using rule 54 (Stmt)


State 115

   55 Stmt: PrintStmt .

    $default  reduce using rule 55 (Stmt)


State 116

   57 ExprOptional: Expr .
   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158

    $default  reduce using rule 57 (ExprOptional)


State 117

   68 Expr: Lvalue . _assignop Expr
   71     | Lvalue .
   96 Lvalue: Lvalue . _leftbracket Expr _rightbracket
   97       | Lvalue . _period _id

    _assignop     shift, and go to state 159
    _period       shift, and go to state 160
    _leftbracket  shift, and go to state 161

    $default  reduce using rule 71 (Expr)


State 118

   73 Expr: Call .

    $default  reduce using rule 73 (Expr)


State 119

   70 Expr: Constant .

    $default  reduce using rule 70 (Expr)


State 120

   39 Prototype: _void _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 162


State 121

   40 Prototype: _id _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 163


State 122

   38 Prototype: Type _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 164


State 123

   63 BreakStmt: _break _semicolon .

    $default  reduce using rule 63 (BreakStmt)


State 124

   62 ForStmt: _for _leftparen . ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    ExprOptional  go to state 165
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 125

   59 IfStmt: _if _leftparen . Expr _rightparen Stmt
   60       | _if _leftparen . Expr _rightparen Stmt _else Stmt

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 166
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 126

   91 Expr: _new _leftparen . _id _rightparen

    _id  shift, and go to state 167


State 127

   92 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen
   93     | _newarray _leftparen . _intconstant _comma _id _rightparen

    _intconstant  shift, and go to state 168


State 128

   65 PrintStmt: _println _leftparen . ExprPlusComma _rightparen _semicolon

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    ExprPlusComma  go to state 169
    Expr           go to state 170
    Lvalue         go to state 117
    Call           go to state 118
    Constant       go to state 119


State 129

   90 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 171


State 130

   69 Expr: _id . _assignop Expr
   72     | _id .
   94 Lvalue: _id . _leftbracket Expr _rightbracket
   95       | _id . _period _id
   98 Call: _id . _leftparen Actuals _rightparen
   99     | _id . _period _id _leftparen Actuals _rightparen

    _assignop     shift, and go to state 136
    _period       shift, and go to state 137
    _leftparen    shift, and go to state 138
    _leftbracket  shift, and go to state 172

    $default  reduce using rule 72 (Expr)


State 131

   64 ReturnStmt: _return ExprOptional . _semicolon

    _semicolon  shift, and go to state 173


State 132

   61 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 174
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 133

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   80     | _minus Expr .
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    $default  reduce using rule 80 (Expr)


State 134

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr
   89     | _not Expr .

    $default  reduce using rule 89 (Expr)


State 135

   74 Expr: _leftparen Expr . _rightparen
   75     | Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _rightparen      shift, and go to state 175


State 136

   69 Expr: _id _assignop . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 176
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 137

   95 Lvalue: _id _period . _id
   99 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 177


State 138

   98 Call: _id _leftparen . Actuals _rightparen

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 101 (Actuals)

    ExprPlusComma  go to state 178
    Expr           go to state 170
    Lvalue         go to state 117
    Call           go to state 118
    Actuals        go to state 179
    Constant       go to state 119


State 139

   16 Type: _id _leftbracket . _rightbracket
   94 Lvalue: _id _leftbracket . Expr _rightbracket

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _rightbracket     shift, and go to state 33
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 180
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 140

   42 StmtBlock: _leftbrace VariableDeclStar _rightbrace .

    $default  reduce using rule 42 (StmtBlock)


State 141

   46 VariableDeclStar: VariableDeclStar VariableDecl .

    $default  reduce using rule 46 (VariableDeclStar)


State 142

   44 StmtBlock: _leftbrace VariableDeclStar StmtStar . _rightbrace
   48 StmtStar: StmtStar . Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _rightbrace       shift, and go to state 181
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 144
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 143

   43 StmtBlock: _leftbrace StmtStar _rightbrace .

    $default  reduce using rule 43 (StmtBlock)


State 144

   48 StmtStar: StmtStar Stmt .

    $default  reduce using rule 48 (StmtStar)


State 145

   49 Stmt: ExprOptional _semicolon .

    $default  reduce using rule 49 (Stmt)


State 146

   75 Expr: Expr _plus . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 182
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 147

   76 Expr: Expr _minus . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 183
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 148

   77 Expr: Expr _multiplication . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 184
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 149

   78 Expr: Expr _division . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 185
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 150

   79 Expr: Expr _mod . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 186
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 151

   81 Expr: Expr _less . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 187
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 152

   82 Expr: Expr _lessequal . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 188
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 153

   83 Expr: Expr _greater . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 189
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 154

   84 Expr: Expr _greaterequal . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 190
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 155

   85 Expr: Expr _equal . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 191
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 156

   86 Expr: Expr _notequal . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 192
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 157

   87 Expr: Expr _and . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 193
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 158

   88 Expr: Expr _or . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 194
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 159

   68 Expr: Lvalue _assignop . Expr

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 195
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 160

   97 Lvalue: Lvalue _period . _id

    _id  shift, and go to state 196


State 161

   96 Lvalue: Lvalue _leftbracket . Expr _rightbracket

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 197
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 162

   39 Prototype: _void _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 39 (Prototype)


State 163

   40 Prototype: _id _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 40 (Prototype)


State 164

   38 Prototype: Type _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 38 (Prototype)


State 165

   62 ForStmt: _for _leftparen ExprOptional . _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _semicolon  shift, and go to state 198


State 166

   59 IfStmt: _if _leftparen Expr . _rightparen Stmt
   60       | _if _leftparen Expr . _rightparen Stmt _else Stmt
   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _rightparen      shift, and go to state 199


State 167

   91 Expr: _new _leftparen _id . _rightparen

    _rightparen  shift, and go to state 200


State 168

   92 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen
   93     | _newarray _leftparen _intconstant . _comma _id _rightparen

    _comma  shift, and go to state 201


State 169

   65 PrintStmt: _println _leftparen ExprPlusComma . _rightparen _semicolon

    _rightparen  shift, and go to state 202


State 170

   66 ExprPlusComma: Expr . _comma ExprPlusComma
   67              | Expr .
   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _comma           shift, and go to state 203

    $default  reduce using rule 67 (ExprPlusComma)


State 171

   90 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 90 (Expr)


State 172

   94 Lvalue: _id _leftbracket . Expr _rightbracket

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 180
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 173

   64 ReturnStmt: _return ExprOptional _semicolon .

    $default  reduce using rule 64 (ReturnStmt)


State 174

   61 WhileStmt: _while _leftparen Expr . _rightparen Stmt
   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _rightparen      shift, and go to state 204


State 175

   74 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 74 (Expr)


State 176

   69 Expr: _id _assignop Expr .
   75     | Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158

    $default  reduce using rule 69 (Expr)


State 177

   95 Lvalue: _id _period _id .
   99 Call: _id _period _id . _leftparen Actuals _rightparen

    _leftparen  shift, and go to state 205

    $default  reduce using rule 95 (Lvalue)


State 178

  100 Actuals: ExprPlusComma .

    $default  reduce using rule 100 (Actuals)


State 179

   98 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 206


State 180

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr
   94 Lvalue: _id _leftbracket Expr . _rightbracket

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _rightbracket    shift, and go to state 207


State 181

   44 StmtBlock: _leftbrace VariableDeclStar StmtStar _rightbrace .

    $default  reduce using rule 44 (StmtBlock)


State 182

   75 Expr: Expr . _plus Expr
   75     | Expr _plus Expr .
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    $default  reduce using rule 75 (Expr)


State 183

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   76     | Expr _minus Expr .
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    $default  reduce using rule 76 (Expr)


State 184

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   77     | Expr _multiplication Expr .
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    $default  reduce using rule 77 (Expr)


State 185

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   78     | Expr _division Expr .
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    $default  reduce using rule 78 (Expr)


State 186

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   79     | Expr _mod Expr .
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    $default  reduce using rule 79 (Expr)


State 187

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   81     | Expr _less Expr .
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    _less          error (nonassociative)
    _lessequal     error (nonassociative)
    _greater       error (nonassociative)
    _greaterequal  error (nonassociative)

    $default  reduce using rule 81 (Expr)


State 188

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   82     | Expr _lessequal Expr .
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    _less          error (nonassociative)
    _lessequal     error (nonassociative)
    _greater       error (nonassociative)
    _greaterequal  error (nonassociative)

    $default  reduce using rule 82 (Expr)


State 189

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   83     | Expr _greater Expr .
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    _less          error (nonassociative)
    _lessequal     error (nonassociative)
    _greater       error (nonassociative)
    _greaterequal  error (nonassociative)

    $default  reduce using rule 83 (Expr)


State 190

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   84     | Expr _greaterequal Expr .
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150

    _less          error (nonassociative)
    _lessequal     error (nonassociative)
    _greater       error (nonassociative)
    _greaterequal  error (nonassociative)

    $default  reduce using rule 84 (Expr)


State 191

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   85     | Expr _equal Expr .
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154

    $default  reduce using rule 85 (Expr)


State 192

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   86     | Expr _notequal Expr .
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154

    $default  reduce using rule 86 (Expr)


State 193

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   87     | Expr _and Expr .
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156

    $default  reduce using rule 87 (Expr)


State 194

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr
   88     | Expr _or Expr .

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157

    $default  reduce using rule 88 (Expr)


State 195

   68 Expr: Lvalue _assignop Expr .
   75     | Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158

    $default  reduce using rule 68 (Expr)


State 196

   97 Lvalue: Lvalue _period _id .

    $default  reduce using rule 97 (Lvalue)


State 197

   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr
   96 Lvalue: Lvalue _leftbracket Expr . _rightbracket

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _rightbracket    shift, and go to state 208


State 198

   62 ForStmt: _for _leftparen ExprOptional _semicolon . Expr _semicolon ExprOptional _rightparen Stmt

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    Expr      go to state 209
    Lvalue    go to state 117
    Call      go to state 118
    Constant  go to state 119


State 199

   59 IfStmt: _if _leftparen Expr _rightparen . Stmt
   60       | _if _leftparen Expr _rightparen . Stmt _else Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 210
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 200

   91 Expr: _new _leftparen _id _rightparen .

    $default  reduce using rule 91 (Expr)


State 201

   92 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen
   93     | _newarray _leftparen _intconstant _comma . _id _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 211

    Type  go to state 212


State 202

   65 PrintStmt: _println _leftparen ExprPlusComma _rightparen . _semicolon

    _semicolon  shift, and go to state 213


State 203

   66 ExprPlusComma: Expr _comma . ExprPlusComma

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    ExprPlusComma  go to state 214
    Expr           go to state 170
    Lvalue         go to state 117
    Call           go to state 118
    Constant       go to state 119


State 204

   61 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 215
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 205

   99 Call: _id _period _id _leftparen . Actuals _rightparen

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 101 (Actuals)

    ExprPlusComma  go to state 178
    Expr           go to state 170
    Lvalue         go to state 117
    Call           go to state 118
    Actuals        go to state 216
    Constant       go to state 119


State 206

   98 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 98 (Call)


State 207

   94 Lvalue: _id _leftbracket Expr _rightbracket .

    $default  reduce using rule 94 (Lvalue)


State 208

   96 Lvalue: Lvalue _leftbracket Expr _rightbracket .

    $default  reduce using rule 96 (Lvalue)


State 209

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr . _semicolon ExprOptional _rightparen Stmt
   75 Expr: Expr . _plus Expr
   76     | Expr . _minus Expr
   77     | Expr . _multiplication Expr
   78     | Expr . _division Expr
   79     | Expr . _mod Expr
   81     | Expr . _less Expr
   82     | Expr . _lessequal Expr
   83     | Expr . _greater Expr
   84     | Expr . _greaterequal Expr
   85     | Expr . _equal Expr
   86     | Expr . _notequal Expr
   87     | Expr . _and Expr
   88     | Expr . _or Expr

    _plus            shift, and go to state 146
    _minus           shift, and go to state 147
    _multiplication  shift, and go to state 148
    _division        shift, and go to state 149
    _mod             shift, and go to state 150
    _less            shift, and go to state 151
    _lessequal       shift, and go to state 152
    _greater         shift, and go to state 153
    _greaterequal    shift, and go to state 154
    _equal           shift, and go to state 155
    _notequal        shift, and go to state 156
    _and             shift, and go to state 157
    _or              shift, and go to state 158
    _semicolon       shift, and go to state 217


State 210

   59 IfStmt: _if _leftparen Expr _rightparen Stmt .
   60       | _if _leftparen Expr _rightparen Stmt . _else Stmt

    _else  shift, and go to state 218

    $default  reduce using rule 59 (IfStmt)


State 211

   16 Type: _id . _leftbracket _rightbracket
   93 Expr: _newarray _leftparen _intconstant _comma _id . _rightparen

    _rightparen   shift, and go to state 219
    _leftbracket  shift, and go to state 21


State 212

   15 Type: Type . _leftbracket _rightbracket
   92 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 220
    _leftbracket  shift, and go to state 26


State 213

   65 PrintStmt: _println _leftparen ExprPlusComma _rightparen _semicolon .

    $default  reduce using rule 65 (PrintStmt)


State 214

   66 ExprPlusComma: Expr _comma ExprPlusComma .

    $default  reduce using rule 66 (ExprPlusComma)


State 215

   61 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 61 (WhileStmt)


State 216

   99 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 221


State 217

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon . ExprOptional _rightparen Stmt

    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _readln           shift, and go to state 92
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    ExprOptional  go to state 222
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 218

   60 IfStmt: _if _leftparen Expr _rightparen Stmt _else . Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 223
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 219

   93 Expr: _newarray _leftparen _intconstant _comma _id _rightparen .

    $default  reduce using rule 93 (Expr)


State 220

   92 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 92 (Expr)


State 221

   99 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 99 (Call)


State 222

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional . _rightparen Stmt

    _rightparen  shift, and go to state 224


State 223

   60 IfStmt: _if _leftparen Expr _rightparen Stmt _else Stmt .

    $default  reduce using rule 60 (IfStmt)


State 224

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen . Stmt

    _break            shift, and go to state 85
    _for              shift, and go to state 86
    _if               shift, and go to state 87
    _new              shift, and go to state 88
    _newarray         shift, and go to state 89
    _null             shift, and go to state 90
    _println          shift, and go to state 91
    _readln           shift, and go to state 92
    _return           shift, and go to state 93
    _while            shift, and go to state 94
    _minus            shift, and go to state 95
    _not              shift, and go to state 96
    _leftparen        shift, and go to state 97
    _leftbrace        shift, and go to state 78
    _intconstant      shift, and go to state 99
    _doubleconstant   shift, and go to state 100
    _stringconstant   shift, and go to state 101
    _booleanconstant  shift, and go to state 102
    _id               shift, and go to state 130

    $default  reduce using rule 58 (ExprOptional)

    StmtBlock     go to state 105
    Stmt          go to state 225
    ExprOptional  go to state 109
    IfStmt        go to state 110
    WhileStmt     go to state 111
    ForStmt       go to state 112
    BreakStmt     go to state 113
    ReturnStmt    go to state 114
    PrintStmt     go to state 115
    Expr          go to state 116
    Lvalue        go to state 117
    Call          go to state 118
    Constant      go to state 119


State 225

   62 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt .

    $default  reduce using rule 62 (ForStmt)
