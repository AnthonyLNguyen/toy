Terminals unused in grammar

   _new
   _newarray
   _readln


State 67 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclPlus

    2 DeclPlus: Decl DeclPlus
    3         | Decl

    4 Decl: VariableDecl
    5     | FunctionDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VariableDecl: Variable _semicolon

    9 Variable: Type _id

   10 Type: _int
   11     | _double
   12     | _boolean
   13     | _string
   14     | Type _leftbracket _rightbracket
   15     | _id

   16 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock
   17             | _void _id _leftparen Formals _rightparen StmtBlock

   18 Formals: VariablePlusComma
   19        | %empty

   20 VariablePlusComma: Variable _comma VariablePlusComma
   21                  | Variable

   22 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar _rightbrace

   23 ClassDeclOptional: _extends _id
   24                  | _implements IdPlusComma
   25                  | _extends _id _implements IdPlusComma
   26                  | %empty

   27 IdPlusComma: _id _comma IdPlusComma
   28            | _id

   29 FieldStar: Field FieldStar
   30          | %empty

   31 Field: VariableDecl
   32      | FunctionDecl

   33 InterfaceDecl: _interface _id _leftbrace PrototypeStar _rightbrace

   34 PrototypeStar: Prototype PrototypeStar
   35              | %empty

   36 Prototype: Type _id _leftparen Formals _rightparen _semicolon
   37          | _void _id _leftparen Formals _rightparen _semicolon

   38 StmtBlock: _leftbrace VariableDeclStar StmtStar _rightbrace

   39 VariableDeclStar: VariableDecl VariableDeclStar
   40                 | %empty

   41 StmtStar: Stmt StmtStar
   42         | %empty

   43 Stmt: ExprOptional _semicolon
   44     | IfStmt
   45     | WhileStmt
   46     | ForStmt
   47     | BreakStmt
   48     | ReturnStmt
   49     | PrintStmt
   50     | StmtBlock

   51 ExprOptional: Expr
   52             | %empty

   53 IfStmt: _if _leftparen Expr _rightparen Stmt IfStmtOptional

   54 IfStmtOptional: _else Stmt
   55               | %empty

   56 WhileStmt: _while _leftparen Expr _rightparen Stmt

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

   58 BreakStmt: _break _semicolon

   59 ReturnStmt: _return ExprOptional _semicolon

   60 PrintStmt: _println _leftparen ExprPlusComma _rightparen

   61 ExprPlusComma: Expr _comma ExprPlusComma
   62              | Expr

   63 Expr: Lvalue _assignop Expr
   64     | Constant
   65     | Lvalue
   66     | Call
   67     | _leftparen Expr _rightparen
   68     | Expr _plus Expr
   69     | Expr _minus Expr
   70     | Expr _multiplication Expr
   71     | Expr _division Expr
   72     | Expr _mod Expr
   73     | _minus Expr
   74     | Expr _less Expr
   75     | Expr _lessequal Expr
   76     | Expr _greater Expr
   77     | Expr _greaterequal Expr
   78     | Expr _equal Expr
   79     | Expr _notequal Expr
   80     | Expr _and Expr
   81     | Expr _or Expr
   82     | _not Expr

   83 Lvalue: _id
   84       | Lvalue _leftbracket Expr _rightbracket
   85       | Lvalue _period _id

   86 Call: _id _leftparen Actuals _rightparen
   87     | _id _period _id _leftparen Actuals _rightparen

   88 Actuals: ExprPlusComma
   89        | %empty

   90 Constant: _intconstant
   91         | _doubleconstant
   92         | _stringconstant
   93         | _booleanconstant
   94         | _null


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 12
_break (259) 58
_class (260) 22
_double (261) 11
_else (262) 54
_extends (263) 23 25
_for (264) 57
_if (265) 53
_implements (266) 24 25
_int (267) 10
_interface (268) 33
_new (269)
_newarray (270)
_null (271) 94
_println (272) 60
_readln (273)
_return (274) 59
_string (275) 13
_void (276) 17 37
_while (277) 56
_plus (278) 68
_minus (279) 69 73
_multiplication (280) 70
_division (281) 71
_mod (282) 72
_less (283) 74
_lessequal (284) 75
_greater (285) 76
_greaterequal (286) 77
_equal (287) 78
_notequal (288) 79
_and (289) 80
_or (290) 81
_not (291) 82
_assignop (292) 63
_semicolon (293) 8 36 37 43 57 58 59
_comma (294) 20 27 61
_period (295) 85 87
_leftparen (296) 16 17 36 37 53 56 57 60 67 86 87
_rightparen (297) 16 17 36 37 53 56 57 60 67 86 87
_leftbracket (298) 14 84
_rightbracket (299) 14 84
_leftbrace (300) 22 33 38
_rightbrace (301) 22 33 38
_intconstant (302) 90
_doubleconstant (303) 91
_stringconstant (304) 92
_booleanconstant (305) 93
_id (306) 9 15 16 17 22 23 25 27 28 33 36 37 83 85 86 87
_uminus (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1, on right: 0
DeclPlus (55)
    on left: 2 3, on right: 1 2
Decl (56)
    on left: 4 5 6 7, on right: 2 3
VariableDecl (57)
    on left: 8, on right: 4 31 39
Variable (58)
    on left: 9, on right: 8 20 21
Type (59)
    on left: 10 11 12 13 14 15, on right: 9 14 16 36
FunctionDecl (60)
    on left: 16 17, on right: 5 32
Formals (61)
    on left: 18 19, on right: 16 17 36 37
VariablePlusComma (62)
    on left: 20 21, on right: 18 20
ClassDecl (63)
    on left: 22, on right: 6
ClassDeclOptional (64)
    on left: 23 24 25 26, on right: 22
IdPlusComma (65)
    on left: 27 28, on right: 24 25 27
FieldStar (66)
    on left: 29 30, on right: 22 29
Field (67)
    on left: 31 32, on right: 29
InterfaceDecl (68)
    on left: 33, on right: 7
PrototypeStar (69)
    on left: 34 35, on right: 33 34
Prototype (70)
    on left: 36 37, on right: 34
StmtBlock (71)
    on left: 38, on right: 16 17 50
VariableDeclStar (72)
    on left: 39 40, on right: 38 39
StmtStar (73)
    on left: 41 42, on right: 38 41
Stmt (74)
    on left: 43 44 45 46 47 48 49 50, on right: 41 53 54 56 57
ExprOptional (75)
    on left: 51 52, on right: 43 57 59
IfStmt (76)
    on left: 53, on right: 44
IfStmtOptional (77)
    on left: 54 55, on right: 53
WhileStmt (78)
    on left: 56, on right: 45
ForStmt (79)
    on left: 57, on right: 46
BreakStmt (80)
    on left: 58, on right: 47
ReturnStmt (81)
    on left: 59, on right: 48
PrintStmt (82)
    on left: 60, on right: 49
ExprPlusComma (83)
    on left: 61 62, on right: 60 61 88
Expr (84)
    on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    81 82, on right: 51 53 56 57 61 62 63 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81 82 84
Lvalue (85)
    on left: 83 84 85, on right: 63 65 84 85
Call (86)
    on left: 86 87, on right: 66
Actuals (87)
    on left: 88 89, on right: 86 87
Constant (88)
    on left: 90 91 92 93 94, on right: 64


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Program        go to state 9
    DeclPlus       go to state 10
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 1

   12 Type: _boolean .

    $default  reduce using rule 12 (Type)


State 2

   22 ClassDecl: _class . _id ClassDeclOptional _leftbrace FieldStar _rightbrace

    _id  shift, and go to state 18


State 3

   11 Type: _double .

    $default  reduce using rule 11 (Type)


State 4

   10 Type: _int .

    $default  reduce using rule 10 (Type)


State 5

   33 InterfaceDecl: _interface . _id _leftbrace PrototypeStar _rightbrace

    _id  shift, and go to state 19


State 6

   13 Type: _string .

    $default  reduce using rule 13 (Type)


State 7

   17 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock

    _id  shift, and go to state 20


State 8

   15 Type: _id .

    $default  reduce using rule 15 (Type)


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 21


State 10

    1 Program: DeclPlus .

    $default  reduce using rule 1 (Program)


State 11

    2 DeclPlus: Decl . DeclPlus
    3         | Decl .

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 3 (DeclPlus)

    DeclPlus       go to state 22
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    FunctionDecl   go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


State 12

    4 Decl: VariableDecl .

    $default  reduce using rule 4 (Decl)


State 13

    8 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 23


State 14

    9 Variable: Type . _id
   14 Type: Type . _leftbracket _rightbracket
   16 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 24
    _id           shift, and go to state 25


State 15

    5 Decl: FunctionDecl .

    $default  reduce using rule 5 (Decl)


State 16

    6 Decl: ClassDecl .

    $default  reduce using rule 6 (Decl)


State 17

    7 Decl: InterfaceDecl .

    $default  reduce using rule 7 (Decl)


State 18

   22 ClassDecl: _class _id . ClassDeclOptional _leftbrace FieldStar _rightbrace

    _extends     shift, and go to state 26
    _implements  shift, and go to state 27

    $default  reduce using rule 26 (ClassDeclOptional)

    ClassDeclOptional  go to state 28


State 19

   33 InterfaceDecl: _interface _id . _leftbrace PrototypeStar _rightbrace

    _leftbrace  shift, and go to state 29


State 20

   17 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 30


State 21

    0 $accept: Program $end .

    $default  accept


State 22

    2 DeclPlus: Decl DeclPlus .

    $default  reduce using rule 2 (DeclPlus)


State 23

    8 VariableDecl: Variable _semicolon .

    $default  reduce using rule 8 (VariableDecl)


State 24

   14 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 31


State 25

    9 Variable: Type _id .
   16 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 32

    $default  reduce using rule 9 (Variable)


State 26

   23 ClassDeclOptional: _extends . _id
   25                  | _extends . _id _implements IdPlusComma

    _id  shift, and go to state 33


State 27

   24 ClassDeclOptional: _implements . IdPlusComma

    _id  shift, and go to state 34

    IdPlusComma  go to state 35


State 28

   22 ClassDecl: _class _id ClassDeclOptional . _leftbrace FieldStar _rightbrace

    _leftbrace  shift, and go to state 36


State 29

   33 InterfaceDecl: _interface _id _leftbrace . PrototypeStar _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 37
    _id       shift, and go to state 8

    $default  reduce using rule 35 (PrototypeStar)

    Type           go to state 38
    PrototypeStar  go to state 39
    Prototype      go to state 40


State 30

   17 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable           go to state 41
    Type               go to state 42
    Formals            go to state 43
    VariablePlusComma  go to state 44


State 31

   14 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 14 (Type)


State 32

   16 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable           go to state 41
    Type               go to state 42
    Formals            go to state 45
    VariablePlusComma  go to state 44


State 33

   23 ClassDeclOptional: _extends _id .
   25                  | _extends _id . _implements IdPlusComma

    _implements  shift, and go to state 46

    $default  reduce using rule 23 (ClassDeclOptional)


State 34

   27 IdPlusComma: _id . _comma IdPlusComma
   28            | _id .

    _comma  shift, and go to state 47

    $default  reduce using rule 28 (IdPlusComma)


State 35

   24 ClassDeclOptional: _implements IdPlusComma .

    $default  reduce using rule 24 (ClassDeclOptional)


State 36

   22 ClassDecl: _class _id ClassDeclOptional _leftbrace . FieldStar _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 30 (FieldStar)

    VariableDecl  go to state 48
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 49
    FieldStar     go to state 50
    Field         go to state 51


State 37

   37 Prototype: _void . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 52


State 38

   14 Type: Type . _leftbracket _rightbracket
   36 Prototype: Type . _id _leftparen Formals _rightparen _semicolon

    _leftbracket  shift, and go to state 24
    _id           shift, and go to state 53


State 39

   33 InterfaceDecl: _interface _id _leftbrace PrototypeStar . _rightbrace

    _rightbrace  shift, and go to state 54


State 40

   34 PrototypeStar: Prototype . PrototypeStar

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 37
    _id       shift, and go to state 8

    $default  reduce using rule 35 (PrototypeStar)

    Type           go to state 38
    PrototypeStar  go to state 55
    Prototype      go to state 40


State 41

   20 VariablePlusComma: Variable . _comma VariablePlusComma
   21                  | Variable .

    _comma  shift, and go to state 56

    $default  reduce using rule 21 (VariablePlusComma)


State 42

    9 Variable: Type . _id
   14 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 24
    _id           shift, and go to state 57


State 43

   17 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 58


State 44

   18 Formals: VariablePlusComma .

    $default  reduce using rule 18 (Formals)


State 45

   16 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 59


State 46

   25 ClassDeclOptional: _extends _id _implements . IdPlusComma

    _id  shift, and go to state 34

    IdPlusComma  go to state 60


State 47

   27 IdPlusComma: _id _comma . IdPlusComma

    _id  shift, and go to state 34

    IdPlusComma  go to state 61


State 48

   31 Field: VariableDecl .

    $default  reduce using rule 31 (Field)


State 49

   32 Field: FunctionDecl .

    $default  reduce using rule 32 (Field)


State 50

   22 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar . _rightbrace

    _rightbrace  shift, and go to state 62


State 51

   29 FieldStar: Field . FieldStar

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 30 (FieldStar)

    VariableDecl  go to state 48
    Variable      go to state 13
    Type          go to state 14
    FunctionDecl  go to state 49
    FieldStar     go to state 63
    Field         go to state 51


State 52

   37 Prototype: _void _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 64


State 53

   36 Prototype: Type _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 65


State 54

   33 InterfaceDecl: _interface _id _leftbrace PrototypeStar _rightbrace .

    $default  reduce using rule 33 (InterfaceDecl)


State 55

   34 PrototypeStar: Prototype PrototypeStar .

    $default  reduce using rule 34 (PrototypeStar)


State 56

   20 VariablePlusComma: Variable _comma . VariablePlusComma

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Variable           go to state 41
    Type               go to state 42
    VariablePlusComma  go to state 66


State 57

    9 Variable: Type _id .

    $default  reduce using rule 9 (Variable)


State 58

   17 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 67

    StmtBlock  go to state 68


State 59

   16 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 67

    StmtBlock  go to state 69


State 60

   25 ClassDeclOptional: _extends _id _implements IdPlusComma .

    $default  reduce using rule 25 (ClassDeclOptional)


State 61

   27 IdPlusComma: _id _comma IdPlusComma .

    $default  reduce using rule 27 (IdPlusComma)


State 62

   22 ClassDecl: _class _id ClassDeclOptional _leftbrace FieldStar _rightbrace .

    $default  reduce using rule 22 (ClassDecl)


State 63

   29 FieldStar: Field FieldStar .

    $default  reduce using rule 29 (FieldStar)


State 64

   37 Prototype: _void _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable           go to state 41
    Type               go to state 42
    Formals            go to state 70
    VariablePlusComma  go to state 44


State 65

   36 Prototype: Type _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 19 (Formals)

    Variable           go to state 41
    Type               go to state 42
    Formals            go to state 71
    VariablePlusComma  go to state 44


State 66

   20 VariablePlusComma: Variable _comma VariablePlusComma .

    $default  reduce using rule 20 (VariablePlusComma)


State 67

   38 StmtBlock: _leftbrace . VariableDeclStar StmtStar _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    _id       [reduce using rule 40 (VariableDeclStar)]
    $default  reduce using rule 40 (VariableDeclStar)

    VariableDecl      go to state 72
    Variable          go to state 13
    Type              go to state 42
    VariableDeclStar  go to state 73


State 68

   17 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 17 (FunctionDecl)


State 69

   16 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 16 (FunctionDecl)


State 70

   37 Prototype: _void _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 74


State 71

   36 Prototype: Type _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 75


State 72

   39 VariableDeclStar: VariableDecl . VariableDeclStar

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    _id       [reduce using rule 40 (VariableDeclStar)]
    $default  reduce using rule 40 (VariableDeclStar)

    VariableDecl      go to state 72
    Variable          go to state 13
    Type              go to state 42
    VariableDeclStar  go to state 76


State 73

   38 StmtBlock: _leftbrace VariableDeclStar . StmtStar _rightbrace

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    _semicolon  reduce using rule 52 (ExprOptional)
    $default    reduce using rule 42 (StmtStar)

    StmtBlock     go to state 92
    StmtStar      go to state 93
    Stmt          go to state 94
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 74

   37 Prototype: _void _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 106


State 75

   36 Prototype: Type _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 107


State 76

   39 VariableDeclStar: VariableDecl VariableDeclStar .

    $default  reduce using rule 39 (VariableDeclStar)


State 77

   58 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 108


State 78

   57 ForStmt: _for . _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _leftparen  shift, and go to state 109


State 79

   53 IfStmt: _if . _leftparen Expr _rightparen Stmt IfStmtOptional

    _leftparen  shift, and go to state 110


State 80

   94 Constant: _null .

    $default  reduce using rule 94 (Constant)


State 81

   60 PrintStmt: _println . _leftparen ExprPlusComma _rightparen

    _leftparen  shift, and go to state 111


State 82

   59 ReturnStmt: _return . ExprOptional _semicolon

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    ExprOptional  go to state 112
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 83

   56 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 113


State 84

   73 Expr: _minus . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 114
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 85

   82 Expr: _not . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 115
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 86

   67 Expr: _leftparen . Expr _rightparen

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 116
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 87

   90 Constant: _intconstant .

    $default  reduce using rule 90 (Constant)


State 88

   91 Constant: _doubleconstant .

    $default  reduce using rule 91 (Constant)


State 89

   92 Constant: _stringconstant .

    $default  reduce using rule 92 (Constant)


State 90

   93 Constant: _booleanconstant .

    $default  reduce using rule 93 (Constant)


State 91

   83 Lvalue: _id .
   86 Call: _id . _leftparen Actuals _rightparen
   87     | _id . _period _id _leftparen Actuals _rightparen

    _period     shift, and go to state 117
    _leftparen  shift, and go to state 118

    _period   [reduce using rule 83 (Lvalue)]
    $default  reduce using rule 83 (Lvalue)


State 92

   50 Stmt: StmtBlock .

    $default  reduce using rule 50 (Stmt)


State 93

   38 StmtBlock: _leftbrace VariableDeclStar StmtStar . _rightbrace

    _rightbrace  shift, and go to state 119


State 94

   41 StmtStar: Stmt . StmtStar

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    _semicolon  reduce using rule 52 (ExprOptional)
    $default    reduce using rule 42 (StmtStar)

    StmtBlock     go to state 92
    StmtStar      go to state 120
    Stmt          go to state 94
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 95

   43 Stmt: ExprOptional . _semicolon

    _semicolon  shift, and go to state 121


State 96

   44 Stmt: IfStmt .

    $default  reduce using rule 44 (Stmt)


State 97

   45 Stmt: WhileStmt .

    $default  reduce using rule 45 (Stmt)


State 98

   46 Stmt: ForStmt .

    $default  reduce using rule 46 (Stmt)


State 99

   47 Stmt: BreakStmt .

    $default  reduce using rule 47 (Stmt)


State 100

   48 Stmt: ReturnStmt .

    $default  reduce using rule 48 (Stmt)


State 101

   49 Stmt: PrintStmt .

    $default  reduce using rule 49 (Stmt)


State 102

   51 ExprOptional: Expr .
   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134

    $default  reduce using rule 51 (ExprOptional)


State 103

   63 Expr: Lvalue . _assignop Expr
   65     | Lvalue .
   84 Lvalue: Lvalue . _leftbracket Expr _rightbracket
   85       | Lvalue . _period _id

    _assignop     shift, and go to state 135
    _period       shift, and go to state 136
    _leftbracket  shift, and go to state 137

    $default  reduce using rule 65 (Expr)


State 104

   66 Expr: Call .

    $default  reduce using rule 66 (Expr)


State 105

   64 Expr: Constant .

    $default  reduce using rule 64 (Expr)


State 106

   37 Prototype: _void _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 37 (Prototype)


State 107

   36 Prototype: Type _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 36 (Prototype)


State 108

   58 BreakStmt: _break _semicolon .

    $default  reduce using rule 58 (BreakStmt)


State 109

   57 ForStmt: _for _leftparen . ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    ExprOptional  go to state 138
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 110

   53 IfStmt: _if _leftparen . Expr _rightparen Stmt IfStmtOptional

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 139
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 111

   60 PrintStmt: _println _leftparen . ExprPlusComma _rightparen

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    ExprPlusComma  go to state 140
    Expr           go to state 141
    Lvalue         go to state 103
    Call           go to state 104
    Constant       go to state 105


State 112

   59 ReturnStmt: _return ExprOptional . _semicolon

    _semicolon  shift, and go to state 142


State 113

   56 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 143
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 114

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   73     | _minus Expr .
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    $default  reduce using rule 73 (Expr)


State 115

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr
   82     | _not Expr .

    $default  reduce using rule 82 (Expr)


State 116

   67 Expr: _leftparen Expr . _rightparen
   68     | Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _rightparen      shift, and go to state 144


State 117

   87 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 145


State 118

   86 Call: _id _leftparen . Actuals _rightparen

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 89 (Actuals)

    ExprPlusComma  go to state 146
    Expr           go to state 141
    Lvalue         go to state 103
    Call           go to state 104
    Actuals        go to state 147
    Constant       go to state 105


State 119

   38 StmtBlock: _leftbrace VariableDeclStar StmtStar _rightbrace .

    $default  reduce using rule 38 (StmtBlock)


State 120

   41 StmtStar: Stmt StmtStar .

    $default  reduce using rule 41 (StmtStar)


State 121

   43 Stmt: ExprOptional _semicolon .

    $default  reduce using rule 43 (Stmt)


State 122

   68 Expr: Expr _plus . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 148
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 123

   69 Expr: Expr _minus . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 149
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 124

   70 Expr: Expr _multiplication . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 150
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 125

   71 Expr: Expr _division . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 151
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 126

   72 Expr: Expr _mod . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 152
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 127

   74 Expr: Expr _less . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 153
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 128

   75 Expr: Expr _lessequal . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 154
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 129

   76 Expr: Expr _greater . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 155
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 130

   77 Expr: Expr _greaterequal . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 156
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 131

   78 Expr: Expr _equal . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 157
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 132

   79 Expr: Expr _notequal . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 158
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 133

   80 Expr: Expr _and . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 159
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 134

   81 Expr: Expr _or . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 160
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 135

   63 Expr: Lvalue _assignop . Expr

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 161
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 136

   85 Lvalue: Lvalue _period . _id

    _id  shift, and go to state 162


State 137

   84 Lvalue: Lvalue _leftbracket . Expr _rightbracket

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 163
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 138

   57 ForStmt: _for _leftparen ExprOptional . _semicolon Expr _semicolon ExprOptional _rightparen Stmt

    _semicolon  shift, and go to state 164


State 139

   53 IfStmt: _if _leftparen Expr . _rightparen Stmt IfStmtOptional
   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _rightparen      shift, and go to state 165


State 140

   60 PrintStmt: _println _leftparen ExprPlusComma . _rightparen

    _rightparen  shift, and go to state 166


State 141

   61 ExprPlusComma: Expr . _comma ExprPlusComma
   62              | Expr .
   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _comma           shift, and go to state 167

    $default  reduce using rule 62 (ExprPlusComma)


State 142

   59 ReturnStmt: _return ExprOptional _semicolon .

    $default  reduce using rule 59 (ReturnStmt)


State 143

   56 WhileStmt: _while _leftparen Expr . _rightparen Stmt
   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _rightparen      shift, and go to state 168


State 144

   67 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 67 (Expr)


State 145

   87 Call: _id _period _id . _leftparen Actuals _rightparen

    _leftparen  shift, and go to state 169


State 146

   88 Actuals: ExprPlusComma .

    $default  reduce using rule 88 (Actuals)


State 147

   86 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 170


State 148

   68 Expr: Expr . _plus Expr
   68     | Expr _plus Expr .
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 68 (Expr)


State 149

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   69     | Expr _minus Expr .
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 69 (Expr)


State 150

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   70     | Expr _multiplication Expr .
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    $default  reduce using rule 70 (Expr)


State 151

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   71     | Expr _division Expr .
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    $default  reduce using rule 71 (Expr)


State 152

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   72     | Expr _mod Expr .
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    $default  reduce using rule 72 (Expr)


State 153

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   74     | Expr _less Expr .
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 74 (Expr)


State 154

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   75     | Expr _lessequal Expr .
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 75 (Expr)


State 155

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   76     | Expr _greater Expr .
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 76 (Expr)


State 156

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   77     | Expr _greaterequal Expr .
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126

    $default  reduce using rule 77 (Expr)


State 157

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   78     | Expr _equal Expr .
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130

    $default  reduce using rule 78 (Expr)


State 158

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   79     | Expr _notequal Expr .
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130

    $default  reduce using rule 79 (Expr)


State 159

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   80     | Expr _and Expr .
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132

    $default  reduce using rule 80 (Expr)


State 160

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr
   81     | Expr _or Expr .

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133

    $default  reduce using rule 81 (Expr)


State 161

   63 Expr: Lvalue _assignop Expr .
   68     | Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134

    $default  reduce using rule 63 (Expr)


State 162

   85 Lvalue: Lvalue _period _id .

    $default  reduce using rule 85 (Lvalue)


State 163

   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr
   84 Lvalue: Lvalue _leftbracket Expr . _rightbracket

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _rightbracket    shift, and go to state 171


State 164

   57 ForStmt: _for _leftparen ExprOptional _semicolon . Expr _semicolon ExprOptional _rightparen Stmt

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    Expr      go to state 172
    Lvalue    go to state 103
    Call      go to state 104
    Constant  go to state 105


State 165

   53 IfStmt: _if _leftparen Expr _rightparen . Stmt IfStmtOptional

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    StmtBlock     go to state 92
    Stmt          go to state 173
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 166

   60 PrintStmt: _println _leftparen ExprPlusComma _rightparen .

    $default  reduce using rule 60 (PrintStmt)


State 167

   61 ExprPlusComma: Expr _comma . ExprPlusComma

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    ExprPlusComma  go to state 174
    Expr           go to state 141
    Lvalue         go to state 103
    Call           go to state 104
    Constant       go to state 105


State 168

   56 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    StmtBlock     go to state 92
    Stmt          go to state 175
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 169

   87 Call: _id _period _id _leftparen . Actuals _rightparen

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 89 (Actuals)

    ExprPlusComma  go to state 146
    Expr           go to state 141
    Lvalue         go to state 103
    Call           go to state 104
    Actuals        go to state 176
    Constant       go to state 105


State 170

   86 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 86 (Call)


State 171

   84 Lvalue: Lvalue _leftbracket Expr _rightbracket .

    $default  reduce using rule 84 (Lvalue)


State 172

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr . _semicolon ExprOptional _rightparen Stmt
   68 Expr: Expr . _plus Expr
   69     | Expr . _minus Expr
   70     | Expr . _multiplication Expr
   71     | Expr . _division Expr
   72     | Expr . _mod Expr
   74     | Expr . _less Expr
   75     | Expr . _lessequal Expr
   76     | Expr . _greater Expr
   77     | Expr . _greaterequal Expr
   78     | Expr . _equal Expr
   79     | Expr . _notequal Expr
   80     | Expr . _and Expr
   81     | Expr . _or Expr

    _plus            shift, and go to state 122
    _minus           shift, and go to state 123
    _multiplication  shift, and go to state 124
    _division        shift, and go to state 125
    _mod             shift, and go to state 126
    _less            shift, and go to state 127
    _lessequal       shift, and go to state 128
    _greater         shift, and go to state 129
    _greaterequal    shift, and go to state 130
    _equal           shift, and go to state 131
    _notequal        shift, and go to state 132
    _and             shift, and go to state 133
    _or              shift, and go to state 134
    _semicolon       shift, and go to state 177


State 173

   53 IfStmt: _if _leftparen Expr _rightparen Stmt . IfStmtOptional

    _else  shift, and go to state 178

    _else     [reduce using rule 55 (IfStmtOptional)]
    $default  reduce using rule 55 (IfStmtOptional)

    IfStmtOptional  go to state 179


State 174

   61 ExprPlusComma: Expr _comma ExprPlusComma .

    $default  reduce using rule 61 (ExprPlusComma)


State 175

   56 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 56 (WhileStmt)


State 176

   87 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 180


State 177

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon . ExprOptional _rightparen Stmt

    _null             shift, and go to state 80
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    ExprOptional  go to state 181
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 178

   54 IfStmtOptional: _else . Stmt

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    StmtBlock     go to state 92
    Stmt          go to state 182
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 179

   53 IfStmt: _if _leftparen Expr _rightparen Stmt IfStmtOptional .

    $default  reduce using rule 53 (IfStmt)


State 180

   87 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 87 (Call)


State 181

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional . _rightparen Stmt

    _rightparen  shift, and go to state 183


State 182

   54 IfStmtOptional: _else Stmt .

    $default  reduce using rule 54 (IfStmtOptional)


State 183

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen . Stmt

    _break            shift, and go to state 77
    _for              shift, and go to state 78
    _if               shift, and go to state 79
    _null             shift, and go to state 80
    _println          shift, and go to state 81
    _return           shift, and go to state 82
    _while            shift, and go to state 83
    _minus            shift, and go to state 84
    _not              shift, and go to state 85
    _leftparen        shift, and go to state 86
    _leftbrace        shift, and go to state 67
    _intconstant      shift, and go to state 87
    _doubleconstant   shift, and go to state 88
    _stringconstant   shift, and go to state 89
    _booleanconstant  shift, and go to state 90
    _id               shift, and go to state 91

    $default  reduce using rule 52 (ExprOptional)

    StmtBlock     go to state 92
    Stmt          go to state 184
    ExprOptional  go to state 95
    IfStmt        go to state 96
    WhileStmt     go to state 97
    ForStmt       go to state 98
    BreakStmt     go to state 99
    ReturnStmt    go to state 100
    PrintStmt     go to state 101
    Expr          go to state 102
    Lvalue        go to state 103
    Call          go to state 104
    Constant      go to state 105


State 184

   57 ForStmt: _for _leftparen ExprOptional _semicolon Expr _semicolon ExprOptional _rightparen Stmt .

    $default  reduce using rule 57 (ForStmt)
